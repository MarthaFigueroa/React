{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Becario\\\\Documents\\\\React\\\\prueba2\\\\React\\\\src\\\\Components\\\\Render-Props\\\\Counter.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Counter extends Component {\n  constructor(props) {\n    super(props);\n\n    this.incrementCount = () => {\n      this.setState(prevState => {\n        return {\n          count: prevState.count + 1\n        };\n      });\n    };\n\n    this.state = {\n      count: 0\n    };\n  }\n\n  render() {\n    const {\n      count\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.props.render(count, this.incrementCount)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nexport default Counter;","map":{"version":3,"sources":["C:/Users/Becario/Documents/React/prueba2/React/src/Components/Render-Props/Counter.js"],"names":["React","Component","Counter","constructor","props","incrementCount","setState","prevState","count","state","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,OAAO,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AACnCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAQnBC,cARmB,GAQF,MAAK;AAClB,WAAKC,QAAL,CAAcC,SAAS,IAAI;AACvB,eAAO;AAACC,UAAAA,KAAK,EAAED,SAAS,CAACC,KAAV,GAAkB;AAA1B,SAAP;AACH,OAFD;AAGH,KAZkB;;AAGf,SAAKC,KAAL,GAAa;AACTD,MAAAA,KAAK,EAAE;AADE,KAAb;AAGH;;AAQDE,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEF,MAAAA;AAAF,QAAY,KAAKC,KAAvB;AACA,wBACI;AAAA,gBACK,KAAKL,KAAL,CAAWM,MAAX,CAAkBF,KAAlB,EAAyB,KAAKH,cAA9B;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAtBkC;AAyBvC,eAAeH,OAAf","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport class Counter extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            count: 0\r\n        }\r\n    }\r\n    \r\n    incrementCount = () =>{\r\n        this.setState(prevState => {\r\n            return {count: prevState.count + 1}\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        const { count } = this.state;\r\n        return (\r\n            <div>\r\n                {this.props.render(count, this.incrementCount)}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Counter\r\n"]},"metadata":{},"sourceType":"module"}