{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Becario\\\\Documents\\\\React\\\\prueba2\\\\React\\\\src\\\\Components\\\\Higher-Order-Components\\\\withCounter.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpdatedComponent = WrappedComponent => {\n  class WithCounter extends Component {\n    constructor(props) {\n      super(props);\n\n      this.incrementCount = () => {\n        this.setState(prevState => {\n          return {\n            count: prevState.count + 1\n          };\n        });\n      };\n\n      this.state = {\n        count: 0\n      };\n    }\n\n    render() {\n      return /*#__PURE__*/_jsxDEV(WrappedComponent, {\n        count: this.state.count,\n        incrementCount: this.incrementCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 20\n      }, this);\n    }\n\n  }\n\n  return WithCounter;\n};\n\n_c = UpdatedComponent;\nexport default WrappedComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdatedComponent\");","map":{"version":3,"sources":["C:/Users/Becario/Documents/React/prueba2/React/src/Components/Higher-Order-Components/withCounter.js"],"names":["React","Component","UpdatedComponent","WrappedComponent","WithCounter","constructor","props","incrementCount","setState","prevState","count","state","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,gBAAgB,GAAGC,gBAAgB,IAAG;AACxC,QAAMC,WAAN,SAA0BH,SAA1B,CAAmC;AAC/BI,IAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,YAAMA,KAAN;;AADe,WAQnBC,cARmB,GAQF,MAAK;AAClB,aAAKC,QAAL,CAAcC,SAAS,IAAI;AACvB,iBAAO;AAACC,YAAAA,KAAK,EAAED,SAAS,CAACC,KAAV,GAAkB;AAA1B,WAAP;AACH,SAFD;AAGH,OAZkB;;AAGf,WAAKC,KAAL,GAAa;AACTD,QAAAA,KAAK,EAAE;AADE,OAAb;AAGH;;AAQDE,IAAAA,MAAM,GAAE;AACJ,0BAAO,QAAC,gBAAD;AAAkB,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWD,KAApC;AAA2C,QAAA,cAAc,EAAE,KAAKH;AAAhE;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AAjB8B;;AAmBnC,SAAOH,WAAP;AACH,CArBD;;KAAMF,gB;AAuBN,eAAeC,gBAAf","sourcesContent":["import React, { Component } from 'react'\r\n\r\nconst UpdatedComponent = WrappedComponent =>{\r\n    class WithCounter extends Component{\r\n        constructor(props) {\r\n            super(props)\r\n        \r\n            this.state = {\r\n                count: 0\r\n            }\r\n        }\r\n        \r\n        incrementCount = () =>{\r\n            this.setState(prevState => {\r\n                return {count: prevState.count + 1}\r\n            })\r\n        }\r\n\r\n        render(){\r\n            return <WrappedComponent count={this.state.count} incrementCount={this.incrementCount}/>\r\n        }\r\n    }\r\n    return WithCounter;\r\n}\r\n\r\nexport default WrappedComponent;"]},"metadata":{},"sourceType":"module"}